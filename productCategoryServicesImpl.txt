package com.yash.pms.services.impl;

import java.util.HashSet;
import java.util.Set;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.yash.pms.exception.ProductCategoryFoundException;
import com.yash.pms.model.product.ProductCategory;
import com.yash.pms.repository.ProductCategoryRepository;
import com.yash.pms.services.ProductCategoryService;

@Service
public class ProductCategoryServiceImpl implements ProductCategoryService{

	@Autowired
	private ProductCategoryRepository productCategoryRepository;
	
	
	//add productcategory
	@Override
	public ProductCategory addProductCategory(ProductCategory productCategory) throws Exception {
		// TODO Auto-generated method stub
		ProductCategory localProductCategory = this.productCategoryRepository.findProductCategoryByName(productCategory.getName());
		
		if(localProductCategory != null) {
			
			System.out.println("ProductCategory is Present");
			throw new ProductCategoryFoundException();
		}else {
			localProductCategory = this.productCategoryRepository.save(productCategory);
		}
		return localProductCategory;
	}

	//update product category
	@Override
	public ProductCategory updateCategory(ProductCategory productCategory) {
		// TODO Auto-generated method stub
		return this.productCategoryRepository.save(productCategory);
	}

	//get all product categories
	@Override
	public Set<ProductCategory> getProductCategories() {
		// TODO Auto-generated method stub
		return new HashSet<>(this.productCategoryRepository.findAll());
	}
	
	//get product category by id
	@Override
	public ProductCategory getProductCategory(Long pcId) {
		// TODO Auto-generated method stub
		return this.productCategoryRepository.findById(pcId).get();
	}

	//delete product category by id
	@Override
	public void deleteProductCategory(Long pcId) {
		// TODO Auto-generated method stub
		ProductCategory productCategory = new ProductCategory();
		productCategory.setPcId(pcId);
		this.productCategoryRepository.delete(productCategory);
	}

}
